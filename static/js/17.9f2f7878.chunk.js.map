{"version":3,"sources":["../../src/index.ts"],"names":["AbstractConnector","supportedChainIds","emitUpdate","ConnectorEvent","emitError","emitDeactivate","WalletLinkConnector","url","appName","appLogoUrl","darkMode","this","accounts","account","provider","chainId","walletLink","m","WalletLink","e","deactivate"],"mappings":"8JAGsBA,EAAtB,Y,4BAGgBC,Q,MAAkD,MAAlDA,kB,6BAEZ,oB,oHALJ,WAcYC,Y,KAIR,KAAUC,IAAV,W,EAlBJ,UAqBYC,Y,KAIR,KAAUD,IAAV,U,EAzBJ,eA4BYE,W,KAIR,KAAUF,IAAV,a,EAhCJ,kB,sZAAA,IASaG,EAAb,Y,QASE,c,MAAcC,QAAKC,YAASC,eAAYC,a,OACtC,cAAM,CAAET,kBAAmB,CAnB/B,MAmBI,MAEA,MACA,YACA,eACA,WAAgBS,IAAhB,E,IAfJ,G,EAAA,G,sEAAA,mD,MAmBSC,K,oCAUiB,6CAA+C,mBAAgCC,EAAhC,OAA/C,eAAhBC,GAEN,MAAO,CAAEC,SAAU,EAAZ,SAA2BC,QAxCtC,EAwCyDF,QAASA,O,iBAZzD,EAAKG,W,uBACiB,gEAA0B,SAAAC,GAAC,4BAAIA,OAAJ,EAAIA,EAAC,SAAL,QAA3B,eAAnBC,GACN,aAAkB,IAAIA,EAAW,EAAf,CAChBV,QAAS,EADO,QAEhBE,SAAU,EAAKA,UACX,aAAkB,CAAED,WAAY,EAAKA,YAH3C,KAKA,WAAgB,8BAAiC,EAAjC,IAnCtB,M,mDASA,MAAAU,GAAA,sBAAAA,KAAA,6BAmCI,uBAAOR,KAAP,UAnCJ,MAAAQ,GAAA,sBAAAA,KAAA,wBAuCI,uBAhDJ,IASA,4BA2CI,uBAAOR,KAAA,oCAAwC,mBAAgCC,EAAhC,OA3CnD,MAAAO,GAAA,sBAAAA,KAAA,aA8CSC,aA9CT,uB,OAiDIT,KAAA,iBAAAA,KACA,iB,kBAlDJ,MAAAQ,GAAA,sBAAAA,KAAA","file":"static/js/17.9f2f7878.chunk.js","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: [CHAIN_ID] })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletLink) {\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return CHAIN_ID\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n}\n"],"sourceRoot":""}